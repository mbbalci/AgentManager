package com.tam.model;

// Generated Apr 26, 2015 5:10:28 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.CascadeType;

/**
 * Port generated by hbm2java
 */
@Entity
@Table(name = "port", catalog = "tam")
public class Port implements java.io.Serializable {
	private static final long serialVersionUID = 1L;

	
	private String code;
	private City city;
	private String name;
	private Set<Segment> segmentsForDepPort = new HashSet<Segment>(0);
	private Set<Segment> segmentsForArrPort = new HashSet<Segment>(0);

	public Port() {
	}

	public Port(String code, City city, String name) {
		this.code = code;
		this.city = city;
		this.name = name;
	}

	public Port(String code, City city, String name, Set<Segment> segmentsForDepPort,
			Set<Segment> segmentsForArrPort) {
		this.code = code;
		this.city = city;
		this.name = name;
		this.segmentsForDepPort = segmentsForDepPort;
		this.segmentsForArrPort = segmentsForArrPort;
	}

	@Id
	@Column(name = "code", unique = true, nullable = false, length = 3)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "city_code", nullable = false)
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portByDepPort")
	public Set<Segment> getSegmentsForDepPort() {
		return this.segmentsForDepPort;
	}

	public void setSegmentsForDepPort(Set<Segment> segmentsForDepPort) {
		this.segmentsForDepPort = segmentsForDepPort;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "portByArrPort")
	public Set<Segment> getSegmentsForArrPort() {
		return this.segmentsForArrPort;
	}

	public void setSegmentsForArrPort(Set<Segment> segmentsForArrPort) {
		this.segmentsForArrPort = segmentsForArrPort;
	}
	
}
